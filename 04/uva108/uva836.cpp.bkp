#include <bits/stdc++.h>


using namespace std;

typedef vector<int> vi;
typedef vector<vi> vvi;


int compute_sum(vvi& cs, int a, int b, int c, int d){
    return cs[c][d] - cs[a-1][d] - cs[c][b-1] + cs[a-1][b-1];
}


int kadane(vi& arr){
    int g = arr[0],
        c = 0;
    
    for(int i = 0; i < arr.size(); i++){
        c += arr[i];
        g = max(g, c);
        c = max(c, 0);
    }
    
    return g;
}


int main(){
    int n;
    while(cin >> n){

        // read matrix
        vvi v(n+1, vi(n+1, 0));
        int i, j;
        for(i = 1; i <= n; i++)
            for(j = 1; j <= n; j++)
                cin >> v[i][j];

        /*
        // print
        for(i = 0; i <= n; i++){
            for(j = 0; j <= n; j++){
                printf("%d ", v[i][j]);
            }
            printf("\n");
        }
        */

        // cumulative sum
        // vertical sum prefix
        /*
        vvi cs(n+1, vi(n+1, 0));
        for(i = 1; i <= n; i++)
            for(j = 1; j <= n; j++)
                cs[i][j] = v[i][j] - cs[i-1][j];
        */
        

        
        /*
        printf("-------------\n");
        // print
        for(i = 0; i <= n; i++){
            for(j = 0; j <= n; j++){
                printf("%d ", cs[i][j]);
            }
            printf("\n");
        }
        */
        

        
       
        int ans = -999999;
        for(j = 1; j <= n; j++){
            vi arr(n, 0);

            
            for(i = j; i <= n; i++){
                //printf("-----------\n");
              
                for(int k = 1; k <= n; k++){
                    //printf("%d ", compute_sum(cs, j, k, n, k));
                    arr[k-1] += v[i][k];
                    //arr[k-1] = compute_sum(cs, i, k, n, k);
                }

                ans = max(ans, kadane(arr));
                //printf("ANSW: %d\n", ans);
            }
        }
        

        printf("%d\n", ans);
        
    }
   
    return 0;
}
